Adam Cole
UID: 004912373
Assn. 9

hw9.txt


We check out version 3.0 of diffutils in a new branch called 'quote'
	$ git checkout v3.0 -b quote

We install the change we made in the Lab into this new branch.
	$ patch -p1 < quote-3.0-patch.txt

We then create our ChangeLog using emacs
	$ emacs
	C-x 4 a	(add-change-log-entry-other-window)
And then we copy the commit message from the correct entry in git-log.txt into
our new ChangeLog.  The commit message from git-log.txt was:

	maint: quote 'like this' or "like this", not `like this'

	    This is in response to a recent change in the GNU coding standards,
	    which now suggest quoting 'like this' or "like this", instead of
	    `like this' or ``like this''.
	    * HACKING, NEWS, README, README-hacking, TODO, doc/diagmeet.note:
	    * doc/diffutils.texi, ms/config.bat, ms/config.site:
	    * src/analyze.c, src/cmp.c, src/context.c, src/diff.c:
	    * src/diff.h, src/diff3.c, src/dir.c, src/ifdef.c, src/io.c:
	    * src/sdiff.c, src/side.c, src/system.h, src/util.c:
	    * tests/help-version:
	    Quote 'like this' or "like this" in commentary.
	    * cfg.mk (old_NEWS_hash): Adjust to reflect new NEWS quoting.
	    * man/help2man: Update to 1.40.4 version, with quoting fixed as above.
	    * po/en.po: Remove translation involving `, as it's no longer needed.
	    * src/cmp.c (try_help, specify_ignore_initial, usage, main):
	    * src/diff.c (main, try_help, option_help_msgid, specify_value)
	    (compare_files):
	    * src/diff3.c (main, try_help, option_help_msgid, usage)
	    (read_diff):
	    * src/dir.c (compare_names):
	    * src/sdiff.c (try_help, usage, check_child_status, main):
	    * src/util.c (finish_output):
	    * tests/help-version:
	    Quote 'like this' in output.

We commit the changes made in the patch using the ChangeLog entry as the
commit message:
	$ git add .
	$ git commit -F ChangeLog

We format the patch and put it into a text file formatted-patch.txt
	$ git format-patch -1 --stdout > formatted-patch.txt
which records all the changes made to the master branch created in the Lab
section, and adds a ChangeLog commit message to it.

Now we switch patches with our partners and test them out.  My partner was
Yuan Cheng, UID: 404931874.

We check out another version 3.0 of diffutils in a new branch called 'partner'
	$ git checkout v3.0 -b partner

and install their patch using git am:
	$ git am formatted-patch-partner.txt

Once installed, we make and install.
	$ ./bootstrap
Remembering to patch the 'gets' function
	$ patch -p0 < gets-patch.txt
And continue building
	$ ./configure
	$ make
	$ make check

Once built, we verify the added ChangeLog works
	$ make distdir
and the original functionality of the patch remains intact
	$ ./diffutils-3.0/src/diff . -
	$ ./diffutils-3.0/src/diff --help

The changes made in the patch are reflected in the output messages.

We exit the terminal session and reopen the host with X11 forwarding
selected.  We also make sure XMing is enabled in Windows.
	$ export PATH=/usr/local/cs/bin:$PATH
	$ cd ~eggert/src/gnu/emacs
	$ gitk
And a seperate window pulls up that documents the master branch and
all of emacs commits.
